{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/sphinx_book_theme/assets/styles/index.scss","webpack:///./src/sphinx_book_theme/assets/scripts/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","sbRunWhenDOMLoaded","cb","document","readyState","addEventListener","attachEvent","window","initThebeSBT","title","querySelector","nextElementSibling","classList","contains","insertAdjacentHTML","initThebe","toggleFullScreen","isInFullScreen","fullscreenElement","webkitFullscreenElement","docElm","documentElement","console","log","exitFullscreen","webkitExitFullscreen","requestFullscreen","webkitRequestFullscreen","onScreenItems","tocObserver","IntersectionObserver","entries","observer","forEach","entry","isIntersecting","push","target","ii","length","splice","add","remove","rootMargin","marginSelector","replace","querySelectorAll","join","observe","boundingClientRect","y","body","noPrintSelector"],"mappings":"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","file":"scripts/sphinx-book-theme.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export default __webpack_public_path__ + \"styles/sphinx-book-theme.css\";","// Import CSS variables\r\n// ref: https://css-tricks.com/getting-javascript-to-talk-to-css-and-sass/\r\nimport \"../styles/index.scss\";\r\n\r\n/**\r\n * A helper function to load scripts when the DOM is loaded.\r\n * This waits for everything to be on the page first before running, since\r\n * some functionality doesn't behave properly until everything is ready.\r\n */\r\nvar sbRunWhenDOMLoaded = (cb) => {\r\n  if (document.readyState != \"loading\") {\r\n    cb();\r\n  } else if (document.addEventListener) {\r\n    document.addEventListener(\"DOMContentLoaded\", cb);\r\n  } else {\r\n    document.attachEvent(\"onreadystatechange\", function () {\r\n      if (document.readyState == \"complete\") cb();\r\n    });\r\n  }\r\n};\r\n\r\n/**\r\n * Toggle full-screen with button\r\n *\r\n * There are some browser-specific hacks in here:\r\n * - Safari requires a `webkit` prefix, so this uses conditionals to check for that\r\n *   ref: https://developer.mozilla.org/en-US/docs/Web/API/Fullscreen_API\r\n */\r\nvar toggleFullScreen = () => {\r\n  var isInFullScreen =\r\n    (document.fullscreenElement && document.fullscreenElement !== null) ||\r\n    (document.webkitFullscreenElement &&\r\n      document.webkitFullscreenElement !== null);\r\n  let docElm = document.documentElement;\r\n  if (!isInFullScreen) {\r\n    console.log(\"[SBT]: Entering full screen\");\r\n    if (docElm.requestFullscreen) {\r\n      docElm.requestFullscreen();\r\n    } else if (docElm.webkitRequestFullscreen) {\r\n      docElm.webkitRequestFullscreen();\r\n    }\r\n  } else {\r\n    console.log(\"[SBT]: Exiting full screen\");\r\n    if (document.exitFullscreen) {\r\n      document.exitFullscreen();\r\n    } else if (document.webkitExitFullscreen) {\r\n      document.webkitExitFullscreen();\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Manage scrolling behavior. This is primarily two things:\r\n *\r\n * 1. Hide the Table of Contents any time sidebar content is on the screen.\r\n *\r\n * This will be triggered any time a sidebar item enters or exits the screen.\r\n * It adds/removes items from an array if they have entered the screen, and\r\n * removes them when they exit the screen. It hides the TOC if anything is\r\n * on-screen.\r\n *\r\n * ref: https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\r\n *\r\n * 2. Add a `scrolled` class to <body> to trigger CSS changes.\r\n */\r\nvar initTocHide = () => {\r\n  var onScreenItems = [];\r\n  let hideTocCallback = (entries, observer) => {\r\n    // Check whether any sidebar item is displayed\r\n    entries.forEach((entry) => {\r\n      if (entry.isIntersecting) {\r\n        // If an element just came on screen, add it our list\r\n        onScreenItems.push(entry.target);\r\n      } else {\r\n        // Otherwise, if it's in our list then remove it\r\n        for (let ii = 0; ii < onScreenItems.length; ii++) {\r\n          if (onScreenItems[ii] === entry.target) {\r\n            onScreenItems.splice(ii, 1);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    // Hide the TOC if any margin content is displayed on the screen\r\n    if (onScreenItems.length > 0) {\r\n      document.querySelector(\"div.bd-sidebar-secondary\").classList.add(\"hide\");\r\n    } else {\r\n      document\r\n        .querySelector(\"div.bd-sidebar-secondary\")\r\n        .classList.remove(\"hide\");\r\n    }\r\n  };\r\n  let manageScrolledClassOnBody = (entries, observer) => {\r\n    // The pixel is at the top, so if we're < 0 that it means we've scrolled\r\n    if (entries[0].boundingClientRect.y < 0) {\r\n      document.body.classList.add(\"scrolled\");\r\n    } else {\r\n      document.body.classList.remove(\"scrolled\");\r\n    }\r\n  };\r\n\r\n  // Set up the intersection observer to watch all margin content\r\n  let options = {\r\n    // Trigger callback when the top of a margin item is 1/3 up the screen\r\n    rootMargin: \"0px 0px -33% 0px\",\r\n  };\r\n  let tocObserver = new IntersectionObserver(hideTocCallback, options);\r\n  // TODO: deprecate popout after v0.5.0\r\n  const selectorClasses = [\r\n    \"marginnote\",\r\n    \"sidenote\",\r\n    \"margin\",\r\n    \"margin-caption\",\r\n    \"full-width\",\r\n    \"sidebar\",\r\n    \"popout\",\r\n  ];\r\n  let marginSelector = [];\r\n  selectorClasses.forEach((ii) => {\r\n    // Use three permutations of each class name because `tag_` and `_` used to be supported\r\n    marginSelector.push(\r\n      ...[\r\n        `.${ii}`,\r\n        `.tag_${ii}`,\r\n        `.${ii.replace(\"-\", \"_\")}`,\r\n        `.tag_${ii.replace(\"-\", \"_\")}`,\r\n      ],\r\n    );\r\n  });\r\n  document.querySelectorAll(marginSelector.join(\", \")).forEach((ii) => {\r\n    tocObserver.observe(ii);\r\n  });\r\n\r\n  // Set up the observer to check if we've scrolled from top of page\r\n  let scrollObserver = new IntersectionObserver(manageScrolledClassOnBody);\r\n  scrollObserver.observe(document.querySelector(\".sbt-scroll-pixel-helper\"));\r\n};\r\n\r\n/**\r\n * Activate Thebe with a custom button click.\r\n */\r\nvar initThebeSBT = () => {\r\n  var title = document.querySelector(\"section h1\");\r\n  var sibling = title.nextElementSibling;\r\n  // If the next element after the title isn't a thebe button, add one now.\r\n  // That way it is initiatlized when thebe is first-clicked and isn't re-added after.\r\n  if (!sibling.classList.contains(\"thebe-launch-button\")) {\r\n    title.insertAdjacentHTML(\r\n      \"afterend\",\r\n      \"<button class='thebe-launch-button'></button>\",\r\n    );\r\n  }\r\n  // This function is provided by sphinx-thebe\r\n  initThebe();\r\n};\r\n\r\n/**\r\n * Add no print class to certain DOM elements\r\n */\r\n\r\nfunction addNoPrint() {\r\n  var noPrintSelector = [\r\n    \".bd-header-announcement\",\r\n    \".bd-header\",\r\n    \".bd-header-article\",\r\n    \".bd-sidebar-primary\",\r\n    \".bd-sidebar-secondary\",\r\n    \".bd-footer-article\",\r\n    \".bd-footer-content\",\r\n    \".bd-footer\",\r\n  ].join(\",\");\r\n  document.querySelectorAll(noPrintSelector).forEach((ii) => {\r\n    ii.classList.add(\"noprint\");\r\n  });\r\n}\r\n\r\n/**\r\n * Set up callback functions for UI click actions\r\n */\r\nwindow.initThebeSBT = initThebeSBT;\r\nwindow.toggleFullScreen = toggleFullScreen;\r\n\r\n/**\r\n * Set up functions to load when the DOM is ready\r\n */\r\nsbRunWhenDOMLoaded(initTocHide);\r\nsbRunWhenDOMLoaded(addNoPrint);\r\n"],"sourceRoot":""}